pipeline {
    agent { label 'slave1' }

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerloginid') // Your Docker Hub credentials ID
    }

    stages {
        stage('SCM Checkout') {
            steps {
                // Get code from your GitHub repository
                git 'https://github.com/chandrabhant98/star-agile-banking-finance.git'
            }
        }
        
        stage('Maven Build') {
            steps {
                // Run Maven on a Unix agent
                sh "mvn -Dmaven.test.failure.ignore=true clean package"
            }
        }
        
        stage("Docker Build") {
            steps {
                // Display Docker version
                sh 'docker version'
                // Build Docker image
                sh "docker build -t chandrabhant98/bankapp-eta-ap:${BUILD_NUMBER} ."
                // List Docker images
                sh 'docker image list'
                // Tag the latest image
                sh "docker tag chandrabhant98/bankapp-eta-ap:${BUILD_NUMBER} chandrabhant98/bankapp-eta-ap:latest"
            }
        }
        
        stage('Login to Docker Hub') {
            steps {
                // Login to Docker Hub using credentials
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }
        
        stage('Push to Docker Hub') {
            steps {
                // Push the latest Docker image to Docker Hub
                sh "docker push chandrabhant98/bankapp-eta-ap:latest"
            }
        }
        
        stage('Deploy to Kubernetes Environment') {
            steps {
                script {
                    // Publish to the Kubernetes cluster using SSH
                    sshPublisher(publishers: [sshPublisherDesc(
                        configName: 'Kubernetes-Cluster',
                        transfers: [
                            sshTransfer(
                                cleanRemote: false,
                                excludes: '',
                                execCommand: 'kubectl apply -f kubernetesdeploy.yaml',
                                execTimeout: 120000,
                                flatten: false,
                                makeEmptyDirs: false,
                                noDefaultExcludes: false,
                                patternSeparator: '[, ]+',
                                remoteDirectory: '.',
                                remoteDirectorySDF: false,
                                removePrefix: '',
                                sourceFiles: 'kubernetesdeploy.yaml'
                            )
                        ],
                        usePromotionTimestamp: false,
                        useWorkspaceInPromotion: false,
                        verbose: false
                    )])
                }
            }
        }
    }
}
